version: 2.1

commands:
  clear-test-app-cache:
    steps:
      - run:
          name: Clear test app cache
          command: tests/Fixtures/App/console cache:clear
  restore-composer-cache:
    steps:
      - restore_cache:
          keys:
            - composer-cache-{{ .Revision }}
            - composer-cache-{{ .Branch }}
            - composer-cache
  restore-php-cs-fixer-cache:
    steps:
      - restore_cache:
          keys:
            - php-cs-fixer-cache-{{ .Revision }}
            - php-cs-fixer-cache-{{ .Branch }}
            - php-cs-fixer-cache
  restore-phpstan-cache:
    steps:
      - restore_cache:
          keys:
            - phpstan-cache-{{ .Revision }}
            - phpstan-cache-{{ .Branch }}
            - phpstan-cache
  disable-xdebug-php-extension:
    steps:
      - run:
          name: Disable Xdebug PHP extension
          command: sudo rm /usr/local/etc/php/conf.d/docker-php-ext-xdebug.ini
  disable-php-memory-limit:
    steps:
      - run:
          name: Disable PHP memory limit
          command: echo 'memory_limit=-1' | sudo tee -a /usr/local/etc/php/php.ini
  update-composer:
    steps:
      - run:
          name: Update Composer
          command: sudo composer self-update
  save-composer-cache:
    steps:
      - save_cache:
          paths:
            - ~/.composer/cache
          key: composer-cache-{{ .Branch }}-{{ .BuildNum }}
      - save_cache:
          paths:
            - ~/.composer/cache
          key: composer-cache-{{ .Revision }}-{{ .BuildNum }}
  save-php-cs-fixer-cache:
    steps:
      - save_cache:
          paths:
            - .php_cs.cache
          key: php-cs-fixer-cache-{{ .Branch }}-{{ .BuildNum }}
      - save_cache:
          paths:
            - .php_cs.cache
          key: php-cs-fixer-cache-{{ .Revision }}-{{ .BuildNum }}
  save-phpstan-cache:
    steps:
      - save_cache:
          paths:
            - /tmp/phpstan/cache
          key: phpstan-cache-{{ .Branch }}-{{ .BuildNum }}
      - save_cache:
          paths:
            - /tmp/phpstan/cache
          key: phpstan-cache-{{ .Revision }}-{{ .BuildNum }}
  update-project-dependencies:
    steps:
      - run:
          name: Update project dependencies
          command: composer update --prefer-dist --no-progress --no-suggest --ansi
  update-project-dependencies-lowest:
    steps:
      - run:
          name: Update project dependencies
          command: composer update --prefer-dist --no-progress --no-suggest --ansi --prefer-lowest

executors:
  php:
    docker:
      - image: circleci/php:7.2-node

jobs:
  php-cs-fixer:
    executor: php
    environment:
      PHP_CS_FIXER_FUTURE_MODE: 1
    working_directory: ~/GregoireHebert/configuration-converter-bundle
    steps:
      - checkout
      - disable-xdebug-php-extension
      - disable-php-memory-limit
      - update-composer
      - restore-composer-cache
      - run:
          name: Install PHP-CS-Fixer
          command: composer global require friendsofphp/php-cs-fixer:^2.15@dev
      - save-composer-cache
      - restore-php-cs-fixer-cache
      - run:
          name: Run PHP-CS-Fixer
          command: |
            export PATH="$PATH:$HOME/.composer/vendor/bin"
            php-cs-fixer fix --dry-run --diff --ansi
      - save-php-cs-fixer-cache

  phpstan:
    executor: php
    environment:
      # https://github.com/phpstan/phpstan-symfony/issues/37
      APP_DEBUG: 1
    working_directory: ~/GregoireHebert/configuration-converter-bundle
    steps:
      - checkout
      - update-composer
      - disable-xdebug-php-extension
      - disable-php-memory-limit
      - restore-composer-cache
      - update-project-dependencies
      - save-composer-cache
      - restore-phpstan-cache
      - run:
          name: Run PHPStan
          command: vendor/bin/phpstan analyse --ansi
      - save-phpstan-cache

  phpunit-lowest:
    executor: php
    working_directory: ~/GregoireHebert/configuration-converter-bundle
    steps:
      - checkout
      - disable-xdebug-php-extension
      - disable-php-memory-limit
      - restore-composer-cache
      - update-project-dependencies-lowest
      - save-composer-cache
      - clear-test-app-cache
      - run:
          name: Run PHPUnit tests
          command: vendor/bin/phpunit

  phpunit-coverage:
    executor: php
    working_directory: ~/GregoireHebert/configuration-converter-bundle
    steps:
      - checkout
      - disable-xdebug-php-extension
      - disable-php-memory-limit
      - restore-composer-cache
      - update-project-dependencies
      - save-composer-cache
      - clear-test-app-cache
      - run:
          name: Run PHPUnit tests
          command: |
            mkdir -p build/logs/phpunit build/coverage
            phpdbg -qrr vendor/bin/phpunit --coverage-php build/cov/coverage.cov --log-junit build/logs/junit.xml --colors=always
      - store_test_results:
          path: build/logs
      - store_artifacts:
          path: build/logs/phpunit/junit.xml
          destination: build/logs/phpunit/junit.xml
      - store_artifacts:
          path: build/logs/parallel/jobs.log
          destination: build/logs/parallel/jobs.log
      - persist_to_workspace:
          root: build
          paths:
            - cov

  merge-and-upload-coverage:
    executor: php
    working_directory: ~/GregoireHebert/configuration-converter-bundle
    steps:
      - checkout
      - disable-xdebug-php-extension
      - disable-php-memory-limit
      - run:
          name: Download phpcov
          command: wget https://phar.phpunit.de/phpcov.phar
      - attach_workspace:
          at: build
      - run:
          name: Merge code coverage reports
          command: |
            mkdir -p build/logs
            phpdbg -qrr phpcov.phar merge --clover build/logs/clover.xml build/cov
      - store_artifacts:
          path: build/logs/clover.xml
          destination: build/logs/clover.xml
      - run:
          name: Upload code coverage report to Coveralls
          command: |
            if [ ! -z "$COVERALLS_REPO_TOKEN" ]; then
              npx @cedx/coveralls build/logs/clover.xml
            else
              echo 'Skipped'
            fi

workflows:
  version: 2
  lint:
    jobs:
      - php-cs-fixer
      - phpstan
  coverage:
    jobs:
      - phpunit-lowest
      - phpunit-coverage
